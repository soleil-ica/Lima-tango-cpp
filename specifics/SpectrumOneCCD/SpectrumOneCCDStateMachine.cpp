/*----- PROTECTED REGION ID(SpectrumOneCCDStateMachine.cpp) ENABLED START -----*/
//=============================================================================
//
// file :        SpectrumOneCCDStateMachine.cpp
//
// description : State machine file for the SpectrumOneCCD class
//
// project :     SpectrumOne
//
// This file is part of Tango device class.
// 
// Tango is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Tango is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Tango.  If not, see <http://www.gnu.org/licenses/>.
// 
//
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================

#include <SpectrumOneCCD.h>

/*----- PROTECTED REGION END -----*/	//	SpectrumOneCCD::SpectrumOneCCDStateMachine.cpp

//================================================================
//  States   |  Description
//================================================================
//  STANDBY  |  
//  RUNNING  |  
//  FAULT    |  
//  ALARM    |  
//  DISABLE  |  


namespace SpectrumOneCCD_ns
{
//=================================================
//		Attributes Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : SpectrumOneCCD::is_lastTemperature_allowed()
 *	Description : Execution allowed for lastTemperature attribute
 */
//--------------------------------------------------------
bool SpectrumOneCCD::is_lastTemperature_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for lastTemperature attribute in read access.
	/*----- PROTECTED REGION ID(SpectrumOneCCD::lastTemperatureStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	SpectrumOneCCD::lastTemperatureStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SpectrumOneCCD::is_gain_allowed()
 *	Description : Execution allowed for gain attribute
 */
//--------------------------------------------------------
bool SpectrumOneCCD::is_gain_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Check access type.
	if ( type!=Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for WRITE 
		if (get_state()==Tango::RUNNING ||
			get_state()==Tango::FAULT ||
			get_state()==Tango::DISABLE)
		{
		/*----- PROTECTED REGION ID(SpectrumOneCCD::gainStateAllowed_WRITE) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	SpectrumOneCCD::gainStateAllowed_WRITE
			return false;
		}
		return true;
	}
	else

	//	Not any excluded states for gain attribute in read access.
	/*----- PROTECTED REGION ID(SpectrumOneCCD::gainStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	SpectrumOneCCD::gainStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SpectrumOneCCD::is_numFlushes_allowed()
 *	Description : Execution allowed for numFlushes attribute
 */
//--------------------------------------------------------
bool SpectrumOneCCD::is_numFlushes_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Check access type.
	if ( type!=Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for WRITE 
		if (get_state()==Tango::RUNNING ||
			get_state()==Tango::FAULT ||
			get_state()==Tango::ALARM ||
			get_state()==Tango::DISABLE)
		{
		/*----- PROTECTED REGION ID(SpectrumOneCCD::numFlushesStateAllowed_WRITE) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	SpectrumOneCCD::numFlushesStateAllowed_WRITE
			return false;
		}
		return true;
	}
	else

	//	Not any excluded states for numFlushes attribute in read access.
	/*----- PROTECTED REGION ID(SpectrumOneCCD::numFlushesStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	SpectrumOneCCD::numFlushesStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SpectrumOneCCD::is_openShutter_allowed()
 *	Description : Execution allowed for openShutter attribute
 */
//--------------------------------------------------------
bool SpectrumOneCCD::is_openShutter_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Check access type.
	if ( type!=Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for WRITE 
		if (get_state()==Tango::RUNNING ||
			get_state()==Tango::FAULT ||
			get_state()==Tango::ALARM ||
			get_state()==Tango::DISABLE)
		{
		/*----- PROTECTED REGION ID(SpectrumOneCCD::openShutterStateAllowed_WRITE) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	SpectrumOneCCD::openShutterStateAllowed_WRITE
			return false;
		}
		return true;
	}
	else

	//	Not any excluded states for openShutter attribute in read access.
	/*----- PROTECTED REGION ID(SpectrumOneCCD::openShutterStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	SpectrumOneCCD::openShutterStateAllowed_READ
	return true;
}


//=================================================
//		Commands Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : SpectrumOneCCD::is_GetTemperature_allowed()
 *	Description : Execution allowed for GetTemperature attribute
 */
//--------------------------------------------------------
bool SpectrumOneCCD::is_GetTemperature_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Compare device state with not allowed states.
	if (get_state()==Tango::RUNNING ||
		get_state()==Tango::FAULT ||
		get_state()==Tango::ALARM ||
		get_state()==Tango::DISABLE)
	{
	/*----- PROTECTED REGION ID(SpectrumOneCCD::GetTemperatureStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	SpectrumOneCCD::GetTemperatureStateAllowed
		return false;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SpectrumOneCCD::is_ForceConfig_allowed()
 *	Description : Execution allowed for ForceConfig attribute
 */
//--------------------------------------------------------
bool SpectrumOneCCD::is_ForceConfig_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Compare device state with not allowed states.
	if (get_state()==Tango::RUNNING ||
		get_state()==Tango::FAULT ||
		get_state()==Tango::ALARM ||
		get_state()==Tango::DISABLE)
	{
	/*----- PROTECTED REGION ID(SpectrumOneCCD::ForceConfigStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	SpectrumOneCCD::ForceConfigStateAllowed
		return false;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SpectrumOneCCD::is_GetGain_allowed()
 *	Description : Execution allowed for GetGain attribute
 */
//--------------------------------------------------------
bool SpectrumOneCCD::is_GetGain_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Compare device state with not allowed states.
	if (get_state()==Tango::RUNNING ||
		get_state()==Tango::FAULT ||
		get_state()==Tango::ALARM ||
		get_state()==Tango::DISABLE)
	{
	/*----- PROTECTED REGION ID(SpectrumOneCCD::GetGainStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	SpectrumOneCCD::GetGainStateAllowed
		return false;
	}
	return true;
}


/*----- PROTECTED REGION ID(SpectrumOneCCD::SpectrumOneCCDStateAllowed.AdditionalMethods) ENABLED START -----*/

//	Additional Methods

/*----- PROTECTED REGION END -----*/	//	SpectrumOneCCD::SpectrumOneCCDStateAllowed.AdditionalMethods

}	//	End of namespace
